[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "multicosim"
dynamic = ["version"]
description = 'Manage gazebo simulations using docker'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Quinn Thibeault", email = "quinn.thibeault96@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "attrs",
    "docker",
    "pyzmq",
    "typing-extensions",
]

[project.urls]
Documentation = "https://github.com/cpslab-asu/multicosim#readme"
Issues = "https://github.com/cpslab-asu/multicosim/issues"
Source = "https://github.com/cpslab-asu/multicosim"

[tool.hatch.version]
path = "src/multicosim/__about__.py"

[tool.hatch.envs.default]
dependencies = [
    "types-docker"
]

[tool.hatch.envs.examples]
dependencies = [
    "click",
    "psy-taliro",
    "multicosim-rover-controller @ {root:uri}/examples/rover/controller",
]

[tool.hatch.envs.examples.scripts]
px4 = "python3 examples/px4.py {args}"
rover = "python3 examples/rover/src/test.py {args}"

[tool.hatch.envs.types]
extra-dependencies = [
    "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --pretty --install-types --non-interactive {args:src tests}"

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "ruff>=0.9.7"
]

[tool.hatch.envs.lint.scripts]
check = [
    "ruff check {args:src tests}",
    "ruff format --diff {args:src tests}",
]

[tool.coverage.run]
source_pkgs = ["multicosim", "tests"]
branch = true
parallel = true
omit = [
  "src/multicosim/__about__.py",
]

[tool.coverage.paths]
multicosim = ["src/multicosim", "*/multicosim/src/multicosim"]
tests = ["tests", "*/multicosim/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pyright]
pythonVersion = "3.8"
include = ["src"]

[tool.mypy]
python_version = "3.8"
files = ["src"]

[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py38"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E4", "E7", "E9", "F", "C90",  # Default Flake8 lints
    "A",                           # Built-in shadowing lints
    "B",                           # Bugbear lints
    "I",                           # Isort lints
    "UP",                          # Upgrade lints
    "C4",                          # List comprehension lints
    "PYI",                         # Stub file lints
    "RET501", "RET502", "RET504",  # Return value lints
    "N8",                          # Naming plugin
    "TD",                          # TODO plugin
    "FBT",                         # Boolean trap lints
    "SIM",                         # Simplification lints
    "PTH",                         # Pathlib migration lints
]

[tool.ruff.lint.isort]
known-first-party = ["multicosim"]
split-on-trailing-comma = false
